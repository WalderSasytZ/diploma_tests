services:

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data
    ports:
      - 5555:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 3s
      timeout: 3s
      retries: 30
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./migrations:/migrations

  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - 15672:15672
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      start_period: 10s
      interval: 5s
      timeout: 5s
      retries: 30

  message_generator:
    container_name: message_generator
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: message_generator
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  algorithm_1:
    container_name: algorithm_1
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: algorithm_1
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  query_consumer:
    container_name: a1_query_consumer
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: query_consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  query_producer:
    container_name: a1_query_producer
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      target: query_producer
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy


volumes:
  db_data:
  rabbitmq_data: